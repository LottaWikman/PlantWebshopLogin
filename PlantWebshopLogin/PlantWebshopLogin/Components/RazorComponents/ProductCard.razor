@using PlantWebshopLogin.Models

@inject NavigationManager navigationManager
@inject IShoppingCartService shoppingCartService
@inject ProductService productService

@rendermode InteractiveServer

<div class="container">
    <div class="@(Product.Quantity == 0 ? "out-of-stock-product-card" : "product-card")">
    <div class="product-image">
      @if (Product.ImageUrl == null)
            {
                <img src="/bootstrap/images/noPicture.jpg" alt="No available image of the product at the moment." />
            }
            else
            {
                <img src="@Product.ImageUrl" alt="Image of @Product.Name" />
            }
    </div>
    <div class="product-details">
      <h2 class="product-title">@Product.Name</h2>
      @if (Product.OldPrice is not null)
            {
                <h4 class="product-price"><s class="old-price">$@Product.OldPrice</s>     $@Product.Price</h4>
            }
            else
            {
                <h4 class="product-price no-old-price">$@Product.Price</h4>
            }

            @if (Product.Quantity == 0)
            {
                <button class="add-to-cart-btn">Out of stock</button>
            }
            else
            {
                <button class="add-to-cart-btn" @onclick="() => AddToShoppingCart(Product)">Add to Cart</button>
            }
                <button class="view-btn" @onclick="()=>GoTo(Product.Id)">View</button>
    </div>
  </div>
</div>

@code {
    [Parameter]
    public Product Product { get; set; }

    public void GoTo(int id)
    {
        navigationManager.NavigateTo("/product/" + id);
    }

    public void AddToShoppingCart(Product product)
    {
        shoppingCartService.AddToCart(product);
    }

}
