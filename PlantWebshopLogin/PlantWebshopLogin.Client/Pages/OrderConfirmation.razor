@page "/orderconfirmation"
@using PlantWebshopLogin.Client.Models
@using System.Security.Claims
@using Microsoft.AspNetCore.Authorization

@inject AuthenticationStateProvider StateProvider
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject NavigationManager navigationManager

@attribute [Authorize]

@rendermode InteractiveWebAssembly

<h1>Thank you for you purchase!</h1>

<h4>Order:</h4>
<ul>
@foreach (var product in order)
{
	<li>@product.Name @product.Price</li>
}
</ul>
<br />
<h5>Customer information:</h5>
<ul>
	<li>@customer.Firstname</li>
	<li>@customer.Lastname</li>
	<li>@customer.Address</li>
	<li>@customer.City</li>
</ul>

<button @onclick="GoToHome">Back to homepage</button>



@code {
	ClientCustomer customer = new();
	List<ClientProduct> order = new();


	private AuthenticationState authenticationState;

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			// Hämta ut vårt authenticationState
			authenticationState = await StateProvider.GetAuthenticationStateAsync();

			// Använd det för att hitta den inloggades userId via Claims
			var userId = authenticationState
				.User
				.Claims
				.Where(c => c.Type == ClaimTypes.NameIdentifier)
				.First()
				.Value;

			//skapar nyckeln för customer-infon:
			string key = customer.Id.ToString();

			// Hämta ut informationen från sessionStorage:
			order = await sessionStorage.GetItemAsync<List<ClientProduct>>(userId);
			customer = await sessionStorage.GetItemAsync<ClientCustomer>(key);
			
			StateHasChanged();
		}
	}

	public void GoToHome()
	{
		navigationManager.NavigateTo("/");
	}
}